#!/bin/bash
. ${0%/*}/ENV.setview   # Environment

ARCHLOC=${ARCHLOC:-"$HOME/{archives}"}
TLA=${TLA:-$HOME/bin/tla}
export TLA ARCHLOC

function fusage()
{
   /bin/cat <<EOT
   newarchive: create an Arch archive
   Synopsis:
      newarchive [-n] [archivename [projectname]]

      Executed without arguments outside of a view, newarchive will prompt
      for an archive name and a project name. 

      Executed within a view, newarchive will use the current archive name,
      but will still prompt for a project name it is not provided. 

      IT IS USEFUL TO USE THE CLIENT/OWNER'S NAME FOR THE "ARCHIVENAME".
      This is not a fixed rule but a recommended practice.

      If the "-n" option is set, the script will take no action: it will
      simply echo the tla command it would have used to make the archive.

      This script allocates the Arch archive in ~/{archives} by default.
EOT
}

name="$1"
projectname="$2"
donothing=""
if [[ "$name" == "-h" ]]
then
	fusage
	exit
fi
if [[ "$name" == "-n" ]]
then
	# Don't actually do anything
	name="$2"
	projectname="$3"
        donothing="echo"
fi

if [[ -z "$($TLA my-id)" ]]
then
   echo "Error: you have not idenfied yourself to Arch."
   echo "You can do this by invoking a command like this:"
   dn=$(hostname -d)
   dn=${dn:+".$dn"}
   echo "$TLA my-id 'John Doe <$LOGNAME@$(hostname)$dn>'"
   exit
fi


if [[ -z "$name" && -z "$TLAarchive" ]]
then
   read -p "Archive name " name
fi

if [[ -z "$name" && -z "$TLAarchive" ]]
then
   echo "No archive name given. Quitting..."
   exit
fi
if [[ -z "$projectname" ]]
then
   read -p "Project name " projectname
fi

if [[ -z "$projectname" ]]
then
   echo "No project name given. Quitting..."
   exit
fi


email=$($TLA my-id)
email=${email##* }
email=${email%>}
email=${email#<}

myhost=$(/bin/hostname)
myhost=${myhost:-localhost}
mydom=$(/bin/hostname --domain)
mydom=${mydom:+".$mydom"}
myname=${LOGNAME:-$USER}
year=$(date +%Y)
if [[ -z "$name" && ! -z "$TLAarchive" ]]
then
   fullname="$TLAarchive"
else
   fullname="${email}--${year}-${name}"
fi

location=${ARCHLOC:-"$HOME/{archives}"}
location="$location/${name}"

# mkdir -p $location

# Make the archive iff it doesn't exist
if [[ ! -d "$location" ]]
then
   $donothing "$TLA" make-archive "$fullname" "$location"
else 
   echo "Warning: Archive location $location already exists."
fi

# Make the project category iff it doesn't exist
# workaround: the "" fools our wrapper so "categories" doesn't have a default
$TLA categories -A "$fullname" | grep -q "$projectname"
if [[ $? == 1 ]]
then
   $donothing "$TLA" archive-setup -A "$fullname" ${projectname}--mainline--0.1 
else
   echo "Warning: Project '$projectname' already exists!" >&2
fi

